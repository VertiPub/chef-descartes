#!/bin/bash
#
# This shell script takes care of starting and stopping
# Descartes
#
# chkconfig: 345 90 10
# description: Descartes init script
#
### BEGIN INIT INFO
# Provides:          Descartes
# Required-Start:    
# Should-Start:
# Required-Stop:     
# Should-Stop:
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Descartes init script
### END INIT INFO

. /etc/init.d/functions

STATUS_RUNNING=0
RETVAL=0

lockfile=/var/lock/subsys/descartes
process_name=descartes
user=<%= @user %>
install_root=<%= @install_root %>
current_release_dir=${install_root}/current
pidfile=${current_release_dir}/pids/descartes.pid
start_command="bundle exec rackup -p <%= @thin_port %> -s thin -P $pidfile -D"

# export the required environment variables
. ${install_root}/shared/env

function start() {
  [ `id -u` -eq 0 ] || exit 4
  if [ -e $pidfile ]
  then
    pid=`pidofproc -p $pidfile $process_name`
    RETVAL=$?
    # If SUCCESS then don't need to start again.
    if [ $RETVAL = "$STATUS_RUNNING" ]
    then
      echo -n "$NAME (pid $pid) is already runnning"
    fi
  else
    echo -n "Starting ${process_name}..."
    cd $current_release_dir
    # Start Descartes
    su $user -c "$start_command"
    RETVAL=$?
    if [ $RETVAL -eq 0 ]
    then
      touch $lockfile
    fi
  fi
  echo
  return $RETVAL
}

function stop() {
  [ `id -u` -eq 0 ] || exit 4
  if [ -e $pidfile ]
  then
    pid=`pidofproc -p $pidfile $process_name`
    RETVAL=$?
    # If the status is running then don't need to start again.
    if [ $RETVAL = "$STATUS_RUNNING" ]
    then
      echo -n "Stopping ${process_name}..."
      killproc -p $pidfile $process_name
      RETVAL=$?
      # Now we want to remove lock file and pid file
      [ $RETVAL -eq 0 ] && rm -f $pidfile $lockfile
    else
      echo -n "$process_name is not running, removing existing pid file"
      rm -f $pidfile
    fi
  else
    echo -n "$process_name is not running"  
  fi
  echo
  return $RETVAL
}

case "$1" in
  start)
    start
    RETVAL=$?
    ;;
  stop)
    stop
    RETVAL=$?
    ;;
  status)
    status -p $pidfile ${process_name}
    RETVAL=$?
    ;;
  restart)
    stop
    start
    RETVAL=$?
    ;;
  usage)
    echo $"Usage: $0 {start|stop|restart|status|usage}"
    RETVAL=0
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|status|usage}"
    RETVAL=2
esac

exit $RETVAL
